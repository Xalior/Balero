#!/usr/bin/python

import time
import requests
from flask import Flask, jsonify
from multiprocessing import Process, Value, Array
import serial

from neopixel import *

# LED strip configuration:
FRONT_LED_COUNT = 12  # Number of LED pixels.
FRONT_LED_PIN = 18  # GPIO pin connected to the pixels (18 uses PWM!).
# LED_PIN        = 10      # GPIO pin connected to the pixels (10 uses SPI /dev/spidev0.0).0
FRONT_LED_FREQ_HZ = 800000  # LED signal frequency in hertz (usually 800khz)
FRONT_LED_DMA = 5  # DMA channel to use for generating signal (try 5)
FRONT_LED_BRIGHTNESS = 255  # Set to 0 for darkest and 255 for brightest
FRONT_LED_INVERT = False  # True to invert the signal (when using NPN transistor level shift)
FRONT_LED_CHANNEL = 0  # set to '1' for GPIOs 13, 19, 41, 45 or 53
FRONT_LED_STRIP = ws.WS2811_STRIP_GRB  # Strip type and colour ordering
strip = Adafruit_NeoPixel(FRONT_LED_COUNT, FRONT_LED_PIN, FRONT_LED_FREQ_HZ, FRONT_LED_DMA, FRONT_LED_INVERT,
                          FRONT_LED_BRIGHTNESS, FRONT_LED_CHANNEL, FRONT_LED_STRIP)
strip.begin()

app = Flask(__name__)

anim_on = Value('b', True)
serial_on = Value('b', False)
command_index = Value('i', 0)

tasks = [
    {
        'id': 1,
        'title': u'Buy groceries',
        'description': u'Milk, Cheese, Pizza, Fruit, Tylenol',
        'done': False
    },
    {
        'id': 2,
        'title': u'Learn Python',
        'description': u'Need to find a good Python tutorial on the web',
        'done': False
    }
]


def wheel(pos):
    """Generate rainbow colors across 0-255 positions."""
    if pos < 85:
        return Color(pos * 3, 255 - pos * 3, 0)
    elif pos < 170:
        pos -= 85
        return Color(255 - pos * 3, 0, pos * 3)
    else:
        pos -= 170
        return Color(0, pos * 3, 255 - pos * 3)


hue = 0


@app.route('/api/AT/1', methods=['GET'])
def fakeAT():
    hue = hue + 1
    return jsonify({'hue': hue})


@app.route('/api', methods=['GET'])
def get_tasks():
    return jsonify({'tasks': tasks})


def anim_loop(anim_on, ):
    print "ANIM START"
    j = 0
    while True:
        if anim_on.value == 1:
            for i in range(strip.numPixels()):
                strip.setPixelColor(i, wheel((int(i * 256 / strip.numPixels()) + j) & 255))
            strip.show()
            j = j + 1
            if j > 255:
                j = 0
            time.sleep(5/1000.0)


def serial_listener(serial_on, ):
    print "SERIAL STARTING"
    if serial_on.value == True:
        print "SERIAL STARTING"
        ser = serial.Serial('/dev/ttyGS0', 115200)
        print("serial ready")
        ser.write("+READY")
        while True:
            command = ser.read()
            ser.write(command)
            print(command)
            r = requests.get('http://127.0.0.1:5000/api/AT/'+command)
            print(r.status_code)


if __name__ == "__main__":
    anim_p = Process(target=anim_loop, args=(anim_on,))
    anim_p.start()
    serial_p = Process(target=serial_listener, args=(serial_on,))
    serial_p.start()
    app.run(debug=True, use_reloader=False, host='0.0.0.0')
    anim_p.join()
    serial_p.join()
